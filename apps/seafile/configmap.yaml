apiVersion: v1
kind: ConfigMap
metadata:
  name: seafile-env
  namespace: seafile
data:
  # for Seafile server
  TIME_ZONE: "Europe/Berlin"
  SEAFILE_LOG_TO_STDOUT: "true"
  SITE_ROOT: "/"
  SEAFILE_SERVER_HOSTNAME: "file.timosur.com"
  SEAFILE_SERVER_PROTOCOL: "https"

  # for database
  SEAFILE_MYSQL_DB_HOST: "seafile-mysql"
  SEAFILE_MYSQL_DB_PORT: "3306"
  SEAFILE_MYSQL_DB_USER: "seafile"
  SEAFILE_MYSQL_DB_CCNET_DB_NAME: "ccnet_db"
  SEAFILE_MYSQL_DB_SEAFILE_DB_NAME: "seafile_db"
  SEAFILE_MYSQL_DB_SEAHUB_DB_NAME: "seahub_db"

  # for cached - using Redis
  CACHE_PROVIDER: "redis"

  ## for redis
  REDIS_HOST: "seafile-redis"
  REDIS_PORT: "6379"

  # for S3 - disabled (using local disk storage)
  SEAF_SERVER_STORAGE_TYPE: "disk"
  S3_COMMIT_BUCKET: ""
  S3_FS_BUCKET: ""
  S3_BLOCK_BUCKET: ""
  S3_KEY_ID: ""
  S3_USE_V4_SIGNATURE: "true"
  S3_AWS_REGION: "us-east-1"
  S3_HOST: ""
  S3_USE_HTTPS: "true"
  S3_PATH_STYLE_REQUEST: "false"

  # for notification
  ENABLE_NOTIFICATION_SERVER: "false"
  NOTIFICATION_SERVER_URL: ""

  # for seadoc
  ENABLE_SEADOC: "false"
  SEADOC_SERVER_URL: ""
  
  # Seafile AI
  ENABLE_SEAFILE_AI: "false"
  SEAFILE_AI_SERVER_URL: ""

  # Metadata server
  MD_FILE_COUNT_LIMIT: "100000"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: seafile-config-files
  namespace: seafile
data:
  seafdav.conf: |
    [WEBDAV]

    # Default is false. Change it to true to enable SeafDAV server.
    enabled = true

    port = 8080
    debug = true

    # If you deploy seafdav behind nginx/apache, you need to modify "share_name".
    share_name = /seafdav

    # SeafDAV uses Gunicorn as web server.
    # This option maps to Gunicorn's 'workers' setting. https://docs.gunicorn.org/en/stable/settings.html?#workers
    # By default it's set to 5 processes.
    workers = 5

    # This option maps to Gunicorn's 'timeout' setting. https://docs.gunicorn.org/en/stable/settings.html?#timeout
    # By default it's set to 1200 seconds, to support large file uploads.
    timeout = 1200
