apiVersion: apps/v1
kind: Deployment
metadata:
  name: seafile
  namespace: seafile
spec:
  replicas: 1
  strategy:
    type: Recreate  # Important for applications with persistent storage
  selector:
    matchLabels:
      app: seafile
  template:
    metadata:
      labels:
        app: seafile
    spec:
      initContainers:
      - name: configure-seafile
        image: seafileltd/seafile-mc:11.0-latest
        command: 
        - /bin/sh
        - -c
        - |
          # Wait for the main seafile directory structure to be created
          while [ ! -d /shared/seafile ]; do
            echo "Waiting for seafile directory..."
            sleep 5
          done
          
          # Add CSRF_TRUSTED_ORIGINS to seahub settings if not already present
          SETTINGS_FILE="/shared/seafile/conf/seahub_settings.py"
          if [ -f "$SETTINGS_FILE" ]; then
            if ! grep -q "CSRF_TRUSTED_ORIGINS" "$SETTINGS_FILE"; then
              echo "CSRF_TRUSTED_ORIGINS = ['https://seafile.timosur.com']" >> "$SETTINGS_FILE"
              echo "Added CSRF_TRUSTED_ORIGINS to seahub_settings.py"
            else
              echo "CSRF_TRUSTED_ORIGINS already configured"
            fi
          else
            echo "seahub_settings.py not found, will be created on first run"
          fi
        volumeMounts:
        - name: seafile-data
          mountPath: /shared
      containers:
      - name: seafile
        image: seafileltd/seafile-mc:11.0-latest
        ports:
        - containerPort: 80
        env:
        - name: DB_ROOT_PASSWD
          valueFrom:
            secretKeyRef:
              name: seafile-mysql-password
              key: MYSQL_ROOT_PASSWORD
        envFrom:
        - configMapRef:
            name: seafile-config
        - secretRef:
            name: seafile-admin-credentials
        volumeMounts:
        - name: seafile-data
          mountPath: /shared
        resources:
          limits:
            memory: "2000Mi"
            cpu: "1000m"
          requests:
            memory: "1000Mi"
            cpu: "200m"
      volumes:
      - name: seafile-data
        persistentVolumeClaim:
          claimName: seafile-data
