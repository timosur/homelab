apiVersion: apps/v1
kind: Deployment
metadata:
  name: garden-backend
  namespace: garden
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: garden-backend
  template:
    metadata:
      labels:
        app: garden-backend
    spec:
      nodeSelector:
        workload-type: arm
      initContainers:
        - name: init-db
          image: busybox:1.37
          command: ["sh", "-c"]
          args:
            - |
              # Check if database already exists
              if [ ! -f /app/db/database.db ]; then
                echo "Initializing database directory..."
                mkdir -p /app/db
              else
                echo "Database already exists, skipping initialization"
              fi
          volumeMounts:
            - name: backend-db
              mountPath: /app/db
      containers:
        - name: garden-backend
          image: ghcr.io/timosur/life-as-a-garden/backend:sha-2797ce9@sha256:d8a3a4cf74342ad0ea7cf88ab5f6fb9c8f30dcb8a11060ea1b2b9673779fbd5f
          ports:
            - containerPort: 8000
          env:
            - name: PYTHONPATH
              value: "/app"
            - name: PYTHONUNBUFFERED
              value: "1"
            - name: FRONTEND_URL
              value: "http://garden-frontend:80"
            - name: RMAPI_SERVICE_URL
              value: "http://garden-rmapi-wrapper:8001"
          envFrom:
            - configMapRef:
                name: garden-backend-config
            - secretRef:
                name: garden-backend-secrets
          volumeMounts:
            - name: backend-input
              mountPath: /app/input
            - name: backend-output
              mountPath: /app/output
            - name: backend-db
              mountPath: /app/db
          resources:
            limits:
              memory: "1Gi"
              cpu: "1000m"
            requests:
              memory: "126Mi"
              cpu: "100m"
          livenessProbe:
            httpGet:
              path: /api/health
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 3600
            timeoutSeconds: 120
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /api/health
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 3600
            timeoutSeconds: 120
            failureThreshold: 12
      volumes:
        - name: backend-input
          persistentVolumeClaim:
            claimName: garden-backend-input
        - name: backend-output
          persistentVolumeClaim:
            claimName: garden-backend-output
        - name: backend-db
          persistentVolumeClaim:
            claimName: garden-backend-db
