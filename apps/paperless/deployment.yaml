apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless-redis
  namespace: paperless
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless-redis
  template:
    metadata:
      labels:
        app: paperless-redis
    spec:
      containers:
        - name: redis
          image: docker.io/library/redis:8
          ports:
            - containerPort: 6379
          resources:
            limits:
              memory: "256Mi"
              cpu: "200m"
            requests:
              memory: "128Mi"
              cpu: "50m"
          livenessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 5
            periodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless
  namespace: paperless
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless
  template:
    metadata:
      labels:
        app: paperless
    spec:
      initContainers:
        - name: init-directories
          image: busybox:1.36
          securityContext:
            runAsUser: 0
            runAsGroup: 0
          command:
            - "sh"
            - "-c"
            - |
              set -e
              echo "Starting directory initialization..."

              # Create directories
              echo "Creating directories..."
              mkdir -p /usr/src/paperless/data/index
              mkdir -p /usr/src/paperless/media/documents/originals
              mkdir -p /usr/src/paperless/media/documents/thumbnails
              mkdir -p /usr/src/paperless/export
              mkdir -p /usr/src/paperless/consume

              # Set ownership
              echo "Setting ownership to 1000:1000..."
              chown -R 1000:1000 /usr/src/paperless

              # Set permissions
              echo "Setting permissions..."
              chmod -R 755 /usr/src/paperless

              # Verify permissions
              echo "Verifying permissions..."
              for dir in data media export consume; do
                path="/usr/src/paperless/$dir"
                owner=$(stat -c '%u:%g' "$path")
                perms=$(stat -c '%a' "$path")
                
                if [ "$owner" != "1000:1000" ]; then
                  echo "ERROR: $path has incorrect ownership: $owner (expected 1000:1000)"
                  exit 1
                fi
                
                if [ "$perms" != "755" ]; then
                  echo "ERROR: $path has incorrect permissions: $perms (expected 755)"
                  exit 1
                fi
                
                echo "✓ $path: owner=$owner, perms=$perms"
              done

              # Test write permissions
              echo "Testing write permissions..."
              for dir in data media export consume; do
                test_file="/usr/src/paperless/$dir/.test-write-$$"
                if ! su -s /bin/sh -c "touch '$test_file' && rm -f '$test_file'" - 1000; then
                  echo "ERROR: Cannot write to /usr/src/paperless/$dir as user 1000"
                  exit 1
                fi
                echo "✓ Write test passed for $dir"
              done

              echo "All permission checks passed successfully!"
          volumeMounts:
            - name: paperless-data
              mountPath: /usr/src/paperless/data
            - name: paperless-media
              mountPath: /usr/src/paperless/media
            - name: paperless-export
              mountPath: /usr/src/paperless/export
            - name: paperless-consume
              mountPath: /usr/src/paperless/consume
      containers:
        - name: paperless
          image: ghcr.io/paperless-ngx/paperless-ngx:latest
          ports:
            - containerPort: 8000
          env:
            - name: USERMAP_UID
              value: "1000"
            - name: USERMAP_GID
              value: "1000"
          envFrom:
            - configMapRef:
                name: paperless-config
            - secretRef:
                name: paperless-postgres-password
            - secretRef:
                name: paperless-secret-key
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
          volumeMounts:
            - name: paperless-data
              mountPath: /usr/src/paperless/data
            - name: paperless-media
              mountPath: /usr/src/paperless/media
            - name: paperless-export
              mountPath: /usr/src/paperless/export
            - name: paperless-consume
              mountPath: /usr/src/paperless/consume
          resources:
            limits:
              memory: "2Gi"
              cpu: "1000m"
            requests:
              memory: "500m"
              cpu: "200m"
          livenessProbe:
            httpGet:
              path: /
              port: 8000
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
      volumes:
        - name: paperless-data
          persistentVolumeClaim:
            claimName: paperless-data
        - name: paperless-media
          persistentVolumeClaim:
            claimName: paperless-media
        - name: paperless-export
          persistentVolumeClaim:
            claimName: paperless-export
        - name: paperless-consume
          persistentVolumeClaim:
            claimName: paperless-consume
