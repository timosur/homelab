apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless-redis
  namespace: paperless
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless-redis
  template:
    metadata:
      labels:
        app: paperless-redis
    spec:
      containers:
        - name: redis
          image: docker.io/library/redis:8
          ports:
            - containerPort: 6379
          resources:
            limits:
              memory: "256Mi"
              cpu: "200m"
            requests:
              memory: "128Mi"
              cpu: "50m"
          livenessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 5
            periodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless
  namespace: paperless
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless
  template:
    metadata:
      labels:
        app: paperless
    spec:
      initContainers:
        - name: init-directories
          image: busybox:1.36
          command:
            [
              "sh",
              "-c",
              "mkdir -p /usr/src/paperless/data /usr/src/paperless/media /usr/src/paperless/export /usr/src/paperless/consume && chown -R 1000:1000 /usr/src/paperless",
            ]
          volumeMounts:
            - name: paperless-data
              mountPath: /usr/src/paperless/data
            - name: paperless-media
              mountPath: /usr/src/paperless/media
            - name: paperless-export
              mountPath: /usr/src/paperless/export
            - name: paperless-consume
              mountPath: /usr/src/paperless/consume
      containers:
        - name: paperless
          image: ghcr.io/paperless-ngx/paperless-ngx:latest
          ports:
            - containerPort: 8000
          # env:
          #   - name: USERMAP_UID
          #     value: "1000"
          #   - name: USERMAP_GID
          #     value: "1000"
          # envFrom:
          #   - configMapRef:
          #       name: paperless-config
          #   - secretRef:
          #       name: paperless-postgres-password
          #   - secretRef:
          #       name: paperless-secret-key
          # securityContext:
          #   runAsUser: 1000
          #   runAsGroup: 1000
          #   fsGroup: 1000
          # volumeMounts:
          #   - name: paperless-data
          #     mountPath: /usr/src/paperless/data
          #   - name: paperless-media
          #     mountPath: /usr/src/paperless/media
          #   - name: paperless-export
          #     mountPath: /usr/src/paperless/export
          #   - name: paperless-consume
          #     mountPath: /usr/src/paperless/consume
          # resources:
          #   limits:
          #     memory: "2Gi"
          #     cpu: "1000m"
          #   requests:
          #     memory: "1Gi"
          #     cpu: "200m"
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: 8000
          #   initialDelaySeconds: 60
          #   periodSeconds: 30
          #   timeoutSeconds: 10
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: 8000
          #   initialDelaySeconds: 30
          #   periodSeconds: 10
          #   timeoutSeconds: 5
      volumes:
        - name: paperless-data
          persistentVolumeClaim:
            claimName: paperless-data
        - name: paperless-media
          persistentVolumeClaim:
            claimName: paperless-media
        - name: paperless-export
          persistentVolumeClaim:
            claimName: paperless-export
        - name: paperless-consume
          persistentVolumeClaim:
            claimName: paperless-consume
