apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: open-webui-postgres-credentials
  namespace: open-webui
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: azure-keyvault-store
    kind: ClusterSecretStore
  target:
    name: open-webui-postgres-credentials
    creationPolicy: Owner
    template:
      type: kubernetes.io/basic-auth
  data:
    - secretKey: username
      remoteRef:
        key: open-webui-postgres-username
    - secretKey: password
      remoteRef:
        key: open-webui-postgres-password
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: open-webui-secrets
  namespace: open-webui
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: azure-keyvault-store
    kind: ClusterSecretStore
  target:
    name: open-webui-secrets
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        google-pse-api-key: "{{ .googlePseApiKey }}"
        google-pse-engine-id: "{{ .googlePseEngineId }}"
        openai-api-key: "{{ .openaiApiKey }}"
        database-url: "postgresql://{{ .postgresUsername }}:{{ .postgresPassword }}@open-webui-postgres-rw.open-webui.svc.cluster.local:5432/openwebui"
        pgvector-db-url: "postgresql://{{ .postgresUsername }}:{{ .postgresPassword }}@open-webui-postgres-rw.open-webui.svc.cluster.local:5432/openwebui"
  data:
    - secretKey: googlePseApiKey
      remoteRef:
        key: open-webui-google-pse-api-key
    - secretKey: googlePseEngineId
      remoteRef:
        key: open-webui-google-pse-engine-id
    - secretKey: openaiApiKey
      remoteRef:
        key: open-webui-openai-api-key
    - secretKey: postgresUsername
      remoteRef:
        key: open-webui-postgres-username
    - secretKey: postgresPassword
      remoteRef:
        key: open-webui-postgres-password